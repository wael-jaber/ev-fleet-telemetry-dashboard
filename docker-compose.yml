version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '${BACKEND_PORT:-5001}:${BACKEND_PORT:-5001}'
    environment:
      - PORT=${BACKEND_PORT:-5001}
    env_file:
      - .env
    networks:
      - app-network
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:${BACKEND_PORT:-5001}/health-check',
        ]
      interval: 10s
      retries: 5
      start_period: 5s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - '${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}'
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT:-3000}
      - BACKEND_HOST=backend
      - BACKEND_PORT=${BACKEND_PORT:-5001}
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  e2e:
    build:
      context: .
      dockerfile: e2e/Dockerfile
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT:-3000}
      - TEST_HOST=frontend
    env_file:
      - .env
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
