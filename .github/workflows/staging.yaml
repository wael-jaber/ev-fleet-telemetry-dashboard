name: Staging Deployment & E2E Testing

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_run:
    workflows: ['Continuous Integration']
    types:
      - completed

jobs:
  build-and-push-images:
    name: Build & Push Docker Images to GitHub Container Registry
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'push' || github.event_name == 'pull_request' ||
      (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'develop')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Create .env File
        run: |
          echo "BACKEND_PORT=5001" >> .env
          echo "FRONTEND_PORT=3000" >> .env

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and Push Images Using Docker Compose
        run: |
          docker-compose build
          docker tag ev-fleet-telemetry-dashboard_backend ghcr.io/${{ github.repository_owner }}/backend-staging:latest
          docker tag ev-fleet-telemetry-dashboard_frontend ghcr.io/${{ github.repository_owner }}/frontend-staging:latest
          docker push ghcr.io/${{ github.repository_owner }}/backend-staging:latest
          docker push ghcr.io/${{ github.repository_owner }}/frontend-staging:latest

  deploy-staging:
    name: Deploy Staging to Render
    runs-on: ubuntu-latest
    needs: build-and-push-images
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy Backend to Render
        run: |
          curl -X POST "$RENDER_BACKEND_DEPLOY_HOOK"
        env:
          RENDER_BACKEND_DEPLOY_HOOK: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}
          BACKEND_PORT: 5001

      - name: Deploy Frontend to Render
        run: |
          curl -X POST "$RENDER_FRONTEND_DEPLOY_HOOK"
        env:
          RENDER_FRONTEND_DEPLOY_HOOK: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
          FRONTEND_PORT: 3000
          BACKEND_PORT: 5001

  e2e-tests:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Create .env File
        run: |
          echo "BACKEND_PORT=5001" >> .env
          echo "FRONTEND_PORT=3000" >> .env

      - name: Build E2E Test Image
        run: |
          docker-compose build e2e
          docker tag ev-fleet-telemetry-dashboard_e2e e2e-tests

      - name: Run Playwright E2E Tests
        run: |
          docker run --rm \
            -e FRONTEND_PORT=80 \
            -e TEST_HOST=${{ secrets.STAGING_URL }} \
            e2e-tests
